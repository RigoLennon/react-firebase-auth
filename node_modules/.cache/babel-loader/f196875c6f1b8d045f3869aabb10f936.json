{"ast":null,"code":"import _objectSpread from \"/home/rigo/Documents/react-firebase-auth/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/rigo/Documents/react-firebase-auth/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { SignUpLink, SignUpForm } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, \"Iniciar Sesion\"), React.createElement(SignInForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(SignUpLink, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = event => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      this.props.firebase.doSignInWithEmailAndPassword(email, password).then(() => {\n        this.setState(_objectSpread({}, INITIAL_STATE));\n        this.props.history.push(ROUTES.HOME);\n      }).catch(error => {\n        this.setState({\n          error\n        });\n      });\n      event.preventDefault();\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = _objectSpread({}, INITIAL_STATE);\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n    const isInvalid = password === '' || email === '';\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"email\",\n      value: email,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Correo electronico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      value: password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isInvalid,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Iniciar Sesion\"), error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, error.message));\n  }\n\n}\n\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nexport default SignInPage;\nexport { SignInForm };","map":{"version":3,"sources":["/home/rigo/Documents/react-firebase-auth/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","SignUpLink","SignUpForm","withFirebase","ROUTES","SignInPage","INITIAL_STATE","email","password","error","SignInFormBase","constructor","props","onSubmit","event","state","firebase","doSignInWithEmailAndPassword","then","setState","history","push","HOME","catch","preventDefault","onChange","target","name","value","render","isInvalid","message","SignInForm"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,WAAvC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,UAAU,GAAG,MACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CADJ;;AAQA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,QAAQ,EAAE,EAFQ;AAGlBC,EAAAA,KAAK,EAAE;AAHW,CAAtB;;AAMA,MAAMC,cAAN,SAA6BZ,SAA7B,CAAsC;AAClCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,QANmB,GAMRC,KAAK,IAAI;AAAA,0BACY,KAAKC,KADjB;AAAA,YACRR,KADQ,eACRA,KADQ;AAAA,YACDC,QADC,eACDA,QADC;AAGhB,WAAKI,KAAL,CAAWI,QAAX,CACKC,4BADL,CACkCV,KADlC,EACyCC,QADzC,EAEKU,IAFL,CAEU,MAAM;AACR,aAAKC,QAAL,mBAAmBb,aAAnB;AACA,aAAKM,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwBjB,MAAM,CAACkB,IAA/B;AACH,OALL,EAMKC,KANL,CAMWd,KAAK,IAAI;AACZ,aAAKU,QAAL,CAAc;AAAEV,UAAAA;AAAF,SAAd;AACH,OARL;AASAK,MAAAA,KAAK,CAACU,cAAN;AACH,KAnBkB;;AAAA,SAqBnBC,QArBmB,GAqBRX,KAAK,IAAI;AAChB,WAAKK,QAAL,CAAc;AAAE,SAACL,KAAK,CAACY,MAAN,CAAaC,IAAd,GAAsBb,KAAK,CAACY,MAAN,CAAaE;AAArC,OAAd;AACH,KAvBkB;;AAGf,SAAKb,KAAL,qBAAkBT,aAAlB;AACH;;AAqBDuB,EAAAA,MAAM,GAAE;AAAA,yBAC+B,KAAKd,KADpC;AAAA,UACIR,KADJ,gBACIA,KADJ;AAAA,UACWC,QADX,gBACWA,QADX;AAAA,UACqBC,KADrB,gBACqBA,KADrB;AAEJ,UAAMqB,SAAS,GAAGtB,QAAQ,KAAK,EAAb,IAAmBD,KAAK,KAAK,EAA/C;AAEA,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKM,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAEN,KAFX;AAGI,MAAA,QAAQ,EAAE,KAAKkB,QAHnB;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAC,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAEjB,QAFX;AAGI,MAAA,QAAQ,EAAE,KAAKiB,QAHnB;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,WAAW,EAAC,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAgBI;AAAQ,MAAA,QAAQ,EAAEK,SAAlB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAhBJ,EAoBKrB,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACsB,OAAV,CApBd,CADJ;AAwBH;;AAtDiC;;AAyDtC,MAAMC,UAAU,GAAGhC,OAAO,CACtBD,UADsB,EAEtBI,YAFsB,CAAP,CAGjBO,cAHiB,CAAnB;AAKA,eAAeL,UAAf;AAEA,SAAS2B,UAAT","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink, SignUpForm } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n    <div>\n        <h1>Iniciar Sesion</h1>\n        <SignInForm />\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n}\n\nclass SignInFormBase extends Component{\n    constructor(props) {\n        super(props)\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            })\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name ]: event.target.value });\n    };\n\n    render(){\n        const { email, password, error } = this.state;\n        const isInvalid = password === '' || email === '';\n\n        return(\n            <form onSubmit={this.onSubmit}>\n                <input \n                    name=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Correo electronico\"\n                />\n                <input \n                    name=\"password\"\n                    value={password}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"ContraseÃ±a\"\n                />\n\n                <button disabled={isInvalid} type=\"submit\">\n                    Iniciar Sesion\n                </button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignInForm = compose (\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };"]},"metadata":{},"sourceType":"module"}