{"ast":null,"code":"var _jsxFileName = \"/home/rigo/Documents/react-firebase-auth/src/components/Admin/index.js\";\nimport React, { Component } from 'react';\nimport { withFirebase } from '../Firebase'; //import * as ROLES from '../../constants/roles';\n//import { withAuthorization } from '../Session';\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      users: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    this.props.firebase.users().on('value', snapshot => {\n      this.setState({\n        users: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Admin\"));\n  }\n\n}\n/*const AdminPage = () => (\n    <div>\n        <h1>Administrat</h1>\n        <p>\n            Página solo para administradores\n        </p>\n    </div>\n);\n\nconst condition = authUser => \n    authUser && !!authUser.roles[ROLES.ADMIN];\n*/\n\n\nexport default withAuthorization(condition)(AdminPage);","map":{"version":3,"sources":["/home/rigo/Documents/react-firebase-auth/src/components/Admin/index.js"],"names":["React","Component","withFirebase","AdminPage","constructor","props","state","loading","users","componentDidMount","setState","firebase","on","snapshot","val","render","withAuthorization","condition"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,YAAT,QAA6B,aAA7B,C,CACA;AACA;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAE;AAAX,KAAd;AAEA,SAAKF,KAAL,CAAWM,QAAX,CAAoBH,KAApB,GAA4BI,EAA5B,CAA+B,OAA/B,EAAwCC,QAAQ,IAAI;AAChD,WAAKH,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEK,QAAQ,CAACC,GAAT,EADG;AAEVP,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KALD;AAMH;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ;AAKH;;AA3B4B;AA6BjC;;;;;;;;;;;;;;AAYA,eAAeC,iBAAiB,CAACC,SAAD,CAAjB,CAA6Bd,SAA7B,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n//import * as ROLES from '../../constants/roles';\n//import { withAuthorization } from '../Session';\n\nclass AdminPage extends Component{\n    constructor(props){\n        super(props);\n\n        this.state = {\n            loading: false,\n            users: {},\n        };\n    }\n\n    componentDidMount(){\n        this.setState({ loading: true });\n\n        this.props.firebase.users().on('value', snapshot => {\n            this.setState({\n                users: snapshot.val(),\n                loading: false,\n            });\n        });\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Admin</h1>\n            </div>\n        );\n    }\n}\n/*const AdminPage = () => (\n    <div>\n        <h1>Administrat</h1>\n        <p>\n            Página solo para administradores\n        </p>\n    </div>\n);\n\nconst condition = authUser => \n    authUser && !!authUser.roles[ROLES.ADMIN];\n*/\nexport default withAuthorization(condition)(AdminPage);\n\n"]},"metadata":{},"sourceType":"module"}