{"ast":null,"code":"var _jsxFileName = \"/home/rigo/Documents/react-firebase-auth/src/components/Session/withAuthorization.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { AuthUserContext } from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, authUser => condition(authUser) ? React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })) : null);\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthorization);\n};\n\nexport default withAuthorization;","map":{"version":3,"sources":["/home/rigo/Documents/react-firebase-auth/src/components/Session/withAuthorization.js"],"names":["React","Component","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthorization","condition","WithAuthorization","componentDidMount","listener","props","firebase","auth","onAuthStateChanged","authUser","history","push","SIGN_IN","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAAQC,eAAR,QAA8B,WAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,SAAS,IAAIP,SAAS,IAAI;AAChD,QAAMQ,iBAAN,SAAgCT,KAAK,CAACC,SAAtC,CAAgD;AAC5CS,IAAAA,iBAAiB,GAAE;AACf,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyBC,kBAAzB,CACZC,QAAQ,IAAI;AACR,YAAI,CAACR,SAAS,CAACQ,QAAD,CAAd,EAA0B;AACtB,eAAKJ,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AACH;AACJ,OALW,CAAhB;AAOH;;AAEDC,IAAAA,oBAAoB,GAAE;AAClB,WAAKT,QAAL;AACH;;AAEDU,IAAAA,MAAM,GAAE;AACJ,aACI,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,QAAQ,IACLR,SAAS,CAACQ,QAAD,CAAT,GAAsB,oBAAC,SAAD,oBAAgB,KAAKJ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtB,GAAuD,IAF/D,CADJ;AAOA,aAAO,oBAAC,SAAD,oBAAe,KAAKA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAxB2C;;AA2BhD,SAAOT,OAAO,CACVD,UADU,EAEVG,YAFU,CAAP,CAGLI,iBAHK,CAAP;AAIH,CAhCD;;AAkCA,eAAeF,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport {AuthUserContext} from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount(){\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(ROUTES.SIGN_IN);\n                    }\n                }\n            );\n        }\n\n        componentWillUnmount(){\n            this.listener();\n        }\n\n        render(){\n            return(\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component { ...this.props }/> : null \n                    }\n                </AuthUserContext.Consumer>\n            );\n            return <Component {...this.props} />;\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}